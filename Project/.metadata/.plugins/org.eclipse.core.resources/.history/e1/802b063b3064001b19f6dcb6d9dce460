package sucorrientazo.position;

import sucorrientazo.movement.Direction;

public class Position {
	
	private int X;
	private int Y;
	private Direction direction;
	
	public Position() {
		super();
		this.X = 0;
		this.Y = 0;
		this.direction = Direction.N;
	}
	
	public Position(int X, int Y, Direction direction) {
		this.X = X;
		this.Y = Y;
		this.direction = direction;
	}

	public String toString() {
		return String.valueOf(X)+String.valueOf(Y)+direction.toString();
	}
	
	public void advance() {
		switch(this.direction) {
			case N:
				this.X+=1;
				break;
			case E:
				this.Y+=1;
				break;
			case S:
				this.X-=1;
				break;
			case W:
				this.Y-=1;
				break;
		}
	}	
	
	public Direction toLeft() {
		int id = this.direction.getId();
	    System.out.println(this.direction.getDirection(id));
	    if(this.direction.getId() == 1) {
	    	id = 4;
	    }else {
	    	id-=this.direction.getId();
	   	}
	   	System.out.println(id);
	   	return this.direction.getDirection(id);
	}
	
	public Direction getDirection() {
		return this.direction;
	}
	
	public int getX() {
		return X;
	}

	public void setX(int x) {
		X = x;
	}

	public int getY() {
		return Y;
	}

	public void setY(int y) {
		Y = y;
	}
	
}
