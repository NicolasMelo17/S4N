package sucorrientazo.positions;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import sucorrientazo.delivery.Delivery;
import sucorrientazo.drones.Drone;
import sucorrientazo.position.Position;

public class Positions implements IPositions {
	
	List<Drone> dronesPosition;
	public List<Drone> updatePosition(Map<String, List<Delivery>> deliveries) {
		
		iniciatePositions(deliveries);
		update(deliveries);
		return null;
	}
	
	public void iniciatePositions(Map<String, List<Delivery>> deliveries) {
		
		List<Position> positions;
		for (Map.Entry<String, List<Delivery>> deliverie : deliveries.entrySet()) {
			positions = new ArrayList<Position>();
			for(Delivery del:deliverie.getValue()) {
				positions.add(new Position());
			}
		    dronesPosition.add(new Drone(positions, deliverie.getKey()));	
		}
		for(Drone dro : dronesPosition) {
			for(Position pos: dro.getPositions()) {
				System.out.println(dro.getId()+pos.toString());
			}
		}
		/*for(String id : ids) {
			positions =  new ArrayList<Position>();
			for(Delivery delivery : deliveries) {
				if(id.equals(delivery.getId())) {
					positions.add(new Position());
				}
			}
			dronesPosition.add(new Drone(positions, id));
		}*/
		
	}
	
	public void update(Map<String, List<Delivery>> deliveries) {
		
	}
	
}
